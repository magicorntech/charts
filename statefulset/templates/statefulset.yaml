apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "charts-statefulset.name" . }}
  namespace: "{{ .Release.Namespace }}"
  labels:
    {{- include "charts-statefulset.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.deployment.replicaCount }}
  {{- end }}
  # StatefulSet specific: serviceName is required for stable network identity
  serviceName: {{ include "charts-statefulset.name" . }}-headless
  # StatefulSet specific: podManagementPolicy controls how pods are created/deleted
  # Default is OrderedReady, which ensures pods are created/deleted in order
  podManagementPolicy: OrderedReady
  # StatefulSet specific: updateStrategy for rolling updates
  # Default RollingUpdate with partition: 0 for immediate updates
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      partition: 0
  selector:
    matchLabels:
      {{- include "charts-statefulset.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.deployment.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "charts-statefulset.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.deployment.image.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "charts-statefulset.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.security.podSecurityContext | nindent 8 }}
      {{- if or .Values.configMap.enabled (and (eq .Values.destination "gcp") .Values.secrets.enabled) }}
      volumes:
        {{- if .Values.configMap.enabled }}
        - name: app-config
          configMap:
            name: {{ .Values.configMap.name }}
            items:
              - key: {{ .Values.configMap.fileName }}
                path: {{ .Values.configMap.fileName }}
            defaultMode: 420
        {{- end }}
        {{- if and (eq .Values.destination "gcp") .Values.secrets.enabled }}
        - name: gcpsecrets
          csi:
            driver: secrets-store-gke.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: {{ include "charts-statefulset.name" . }}
        {{- end }}
      {{- end }}

      containers:
        - name: {{ include "charts-statefulset.name" . }}
          image: "{{ .Values.deployment.image.uri }}"
          imagePullPolicy: {{ .Values.deployment.image.pullPolicy }}
          {{- if .Values.deployment.image.command }}
          command: {{- toYaml .Values.deployment.image.command | nindent 12 }}
          {{- end }}
          {{- if .Values.deployment.image.args }}
          args: {{- toYaml .Values.deployment.image.args | nindent 12 }}
          {{- end }}
          {{- if .Values.service.enabled }}
          ports:
            {{- range $key, $val := .Values.service.ports }}
            - name: {{ $key }}
              containerPort: {{ $val.inner }}
              protocol: TCP
            {{- end }}
          {{- end }}
          volumeMounts:
            # StatefulSet specific: volumeMounts for persistent storage
            # Each pod will get its own PVC based on volumeClaimTemplates
            - name: storage
              mountPath: {{ .Values.pvc.mountPath }}
              subPath: {{ .Values.pvc.subPath }}
              readOnly: false
            {{- if .Values.configMap.enabled }}
            - name: app-config
              readOnly: true
              mountPath: {{ .Values.configMap.mountPath }}
              subPath: {{ .Values.configMap.fileName }}
            {{- end }}
            {{- if and (eq .Values.destination "gcp") .Values.secrets.enabled }}
            {{- range .Values.secrets.data }}
            - name: gcpsecrets
              mountPath: {{ $.Values.secrets.mountPath }}/{{ .fileName }}
              subPath: {{ .fileName }}
              readOnly: true
            {{- end }}
            {{- end }}
          
          {{- if .Values.deployment.readiness }}
          readinessProbe:
            {{- toYaml .Values.deployment.readiness | nindent 12 }}
          {{- end }}
          {{- if .Values.deployment.liveness }}
          livenessProbe:
            {{- toYaml .Values.deployment.liveness | nindent 12 }}
          {{- end }}
          env:
            {{- toYaml .Values.deployment.env | nindent 12 }}
          resources:
            {{- toYaml .Values.deployment.resources | nindent 12 }}
          {{- if .Values.deployment.lifecycle }}
          lifecycle:
            {{- toYaml .Values.deployment.lifecycle | nindent 12 }}
          {{- end }}
          securityContext:
            {{- toYaml .Values.security.securityContext | nindent 12 }}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      {{- with .Values.deployment.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: {{ .Values.deployment.deregistrationTime }}
      {{- with .Values.deployment.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.deployment.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.deployment.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
          labelSelector:
            matchLabels:
              {{- include "charts-statefulset.selectorLabels" $ | nindent 14 }}
      {{- end }}

  # StatefulSet specific: volumeClaimTemplates for persistent storage
  # Each pod will get its own PVC: <statefulset-name>-<pod-ordinal>-<template-name>
  volumeClaimTemplates:
  - metadata:
      name: storage
      labels:
        {{- include "charts-statefulset.labels" . | nindent 8 }}
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: {{ .Values.pvc.size }}
      {{- if .Values.pvc.storageClass }}
      storageClassName: {{ .Values.pvc.storageClass }}
      {{- end }}
