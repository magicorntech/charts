apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "charts-deployment.name" . }}
  namespace: "{{ .Release.Namespace }}"
  labels:
    {{- include "charts-deployment.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.deployment.replicaCount }}
  {{- end }}
  progressDeadlineSeconds: {{ .Values.deployment.failSeconds }}
  revisionHistoryLimit: {{ .Values.deployment.revisionHistory }}
  strategy:
    {{- toYaml .Values.deployment.strategy | nindent 4 }}
  selector:
    matchLabels:
      {{- include "charts-deployment.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.deployment.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "charts-deployment.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.deployment.image.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "charts-deployment.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.security.podSecurityContext | nindent 8 }}
      {{- if or .Values.configMap.enabled .Values.pvc.enabled }}
      volumes:
        {{- if .Values.configMap.enabled }}
        - name: app-config
          configMap:
            name: {{ .Values.configMap.name }}
            items:
              - key: {{ .Values.configMap.fileName }}
                path: {{ .Values.configMap.fileName }}
            defaultMode: 420
        {{- end }}
        {{- if .Values.pvc.enabled }}
        - name: storage
          persistentVolumeClaim:
            claimName: {{ include "charts-deployment.name" . }}-pvc
        {{- end }}
      {{- end }}

      containers:
        - name: {{ include "charts-deployment.name" . }}
          image: "{{ .Values.deployment.image.uri }}"
          imagePullPolicy: {{ .Values.deployment.image.pullPolicy }}
          {{- if .Values.deployment.image.command }}
          command: {{- toYaml .Values.deployment.image.command | nindent 12 }}
          {{- end }}
          {{- if .Values.deployment.image.args }}
          args: {{- toYaml .Values.deployment.image.args | nindent 12 }}
          {{- end }}
          {{- if .Values.service.enabled }}
          ports:
            {{- range $key, $val := .Values.service.ports }}
            - name: {{ $key }}
              containerPort: {{ $val.inner }}
              protocol: TCP
            {{- end }}
          {{- end }}
          {{- if or .Values.configMap.enabled .Values.pvc.enabled }}
          volumeMounts:
            {{- if .Values.configMap.enabled }}
            - name: app-config
              readOnly: true
              mountPath: {{ .Values.configMap.mountPath }}
              subPath: {{ .Values.configMap.fileName }}
            {{- end }}
            {{- if .Values.pvc.enabled }}
            - name: storage
              mountPath: {{ .Values.pvc.mountPath }}
              readOnly: false
            {{- end }}
          {{- end }}
          
          {{- if .Values.deployment.readiness }}
          readinessProbe:
            {{- toYaml .Values.deployment.readiness | nindent 12 }}
          {{- end }}
          {{- if .Values.deployment.liveness }}
          livenessProbe:
            {{- toYaml .Values.deployment.liveness | nindent 12 }}
          {{- end }}
          env:
            {{- toYaml .Values.deployment.env | nindent 12 }}
          resources:
            {{- toYaml .Values.deployment.resources | nindent 12 }}
          {{- if .Values.deployment.lifecycle }}
          lifecycle:
            {{- toYaml .Values.deployment.lifecycle | nindent 12 }}
          {{- end }}
          securityContext:
            {{- toYaml .Values.security.securityContext | nindent 12 }}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      {{- with .Values.deployment.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: {{ .Values.deployment.deregistrationTime }}
      {{- with .Values.deployment.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.deployment.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}