{{- range $job := .Values.global.cronjobs }}
{{- if $job.enabled -}}
{{- with $ }}
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ include "charts-common.name" . }}-{{ $job.name }}
  namespace: "{{ .Release.Namespace }}"
  labels:
    {{- include "charts-common.labels" . | nindent 4 }}
spec:
  schedule: {{ $job.schedule | quote }}
  concurrencyPolicy: {{ $job.concurrencyPolicy }}
  failedJobsHistoryLimit: {{ $job.failedJobsHistoryLimit }}
  successfulJobsHistoryLimit: {{ $job.successfulJobsHistoryLimit }}
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app: {{ include "charts-common.name" . }}-{{ $job.name }}
            cron: {{ $job.name }}
        spec:
          {{- with .Values.global.deployment.image.imagePullSecrets }}
          imagePullSecrets:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          serviceAccountName: {{ include "charts-common.serviceAccountName" . }}
          securityContext:
            {{- toYaml .Values.global.security.podSecurityContext | nindent 12 }}
          {{- if or .Values.global.configMap.enabled (and (eq .Values.global.destination "gcp") .Values.global.secrets.enabled) }}
          volumes:
            {{- if .Values.global.configMap.enabled }}
            - name: app-config
              configMap:
                name: {{ .Values.global.configMap.name }}
                items:
                  - key: {{ .Values.global.configMap.fileName }}
                    path: {{ .Values.global.configMap.fileName }}
                defaultMode: 420
            {{- end }}
            {{- if and (eq .Values.global.destination "gcp") .Values.global.secrets.enabled }}
            - name: gcpsecrets
              csi:
                driver: secrets-store-gke.csi.k8s.io
                readOnly: true
                volumeAttributes:
                  secretProviderClass: {{ include "charts-common.name" . }}
            {{- end }}
          {{- end }}
          containers:
          - name: {{ $job.name }}
            image: "{{ .Values.global.deployment.image.uri }}"
            imagePullPolicy: {{ .Values.global.deployment.image.pullPolicy }}
            env:
              {{- toYaml .Values.global.deployment.env | nindent 12 }}
            {{- if $job.command }}
            command: {{ $job.command }}
            {{- end }}
            {{- with $job.args }}
            args: {{ toYaml . | nindent 12 }}
            {{- end }}
            resources:
              {{- toYaml $job.resources | nindent 14 }}
            {{- if or .Values.global.configMap.enabled (and (eq .Values.global.destination "gcp") .Values.global.secrets.enabled) }}
            volumeMounts:
              {{- if .Values.global.configMap.enabled }}
              - name: app-config
                readOnly: true
                mountPath: {{ .Values.global.configMap.mountPath }}
                subPath: {{ .Values.global.configMap.fileName }}
              {{- end }}
              {{- if and (eq .Values.global.destination "gcp") .Values.global.secrets.enabled }}
              {{- range .Values.global.secrets.data }}
              - name: gcpsecrets
                mountPath: {{ $.Values.global.secrets.mountPath }}/{{ .fileName }}
                subPath: {{ .fileName }}
                readOnly: true
              {{- end }}
              {{- end }}
            {{- end }}
          dnsPolicy: ClusterFirst
          {{- with .Values.global.deployment.nodeSelector }}
          nodeSelector:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          restartPolicy: {{ $job.restartPolicy }}
          schedulerName: default-scheduler
          {{- with .Values.global.deployment.affinity }}
          affinity:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.global.deployment.tolerations }}
          tolerations:
            {{- toYaml . | nindent 12 }}
          {{- end }}
---
{{- end }}
{{- end }}
{{- end }}